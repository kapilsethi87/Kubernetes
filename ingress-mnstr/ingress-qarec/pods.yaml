---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller-qarec
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx-qarec
    app.kubernetes.io/part-of: ingress-nginx-qarec
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-qarec
      app.kubernetes.io/part-of: ingress-nginx-qarec
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-qarec
        app.kubernetes.io/part-of: ingress-nginx-qarec
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: nginx-ingress-serviceaccount-qarec
      containers:
        - name: nginx-ingress-controller-qarec
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.20.0
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --configmap=$(POD_NAMESPACE)/nginx-configuration-qarec
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services-qarec
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services-qarec
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-qarec
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --ingress-class=nginx-qarec
            #- --default-ssl-certificate=$(POD_NAMESPACE)/ingress-nginx-secret-qarec
            - --default-ssl-certificate=qa-application/wildmonsterindia2022    
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
