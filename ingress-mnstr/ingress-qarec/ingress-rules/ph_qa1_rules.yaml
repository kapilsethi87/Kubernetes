apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-qa1-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1.monster.com.ph
    http:
      paths:
      - path: /profile
        backend:
          serviceName: search-apis-qa1
          servicePort: 80


      - path: /actions
        backend:
          serviceName: search-apis-qa1
          servicePort: 80

      - path: /v1/actions
        backend:
          serviceName: search-apis-qa1
          servicePort: 80         


      - path: /recruiteractions
        backend:
          serviceName: search-apis-qa1
          servicePort: 80               

      - path: /penguin
        backend:
          serviceName: penguin-prod
          servicePort: 80


      - path: /search
        backend:
          serviceName: search-apis-qa1
          servicePort: 80
      - path: /action
        backend:
          serviceName: search-apis-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
  name: nginx-new-qarec-01-qa1-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1.monster.com.ph
    http:
      paths:
      - path: /config
        backend:
          serviceName: recruiter4-config-qa1
          servicePort: 80


#      - path: /discovery
#        backend:
#          serviceName: recruiter4-discovery-qa1
#          servicePort: 80


      - path: /gateway
        backend:
          serviceName: recruiter4-gateway-qa1
          servicePort: 80

      - path: /authorization-server
        backend:
          serviceName: recruiter4-authorization-server-qa1
          servicePort: 80


      - path: /search-service
        backend:
          serviceName: recruiter4-search-service-qa1
          servicePort: 80



---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-commonservices-qa1-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1.monster.com.ph
    http:
      paths:
      - path: /recruiter4commonservices
        backend:
          serviceName: recruiter4-commonservices-qa1
          servicePort: 80

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-pigeon-qa1-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1.monster.com.ph
    http:
      paths:

      - path: /pigeon
        backend:
          serviceName: pigeon-rec4-qa1
          servicePort: 80

      - path: /v4/managejobposting
        backend:
          serviceName: recruiter4-managejobposting-ui-qa1
          servicePort: 80


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
    nginx.ingress.kubernetes.io/rewrite-target: "/eureka/"
  name: nginx-new-qarec-01-qa1-descovery-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1.monster.com.ph
    http:
      paths:


      - path: /eureka
        backend:
          serviceName: recruiter4-discovery-qa1
          servicePort: 80


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-consumer-ui-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-ui-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-ui-qa1.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-consumer-qa1
          servicePort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-config-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-config.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-config.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-config-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-auth-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-auth.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-auth.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-authorization-server-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-discovery-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-discovery.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-discovery.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-discovery-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-gateway-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-gateway.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-gateway.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-gateway-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-search-service-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-search-service.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-search-service.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-search-service-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-master-data-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-masterdata.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-masterdata.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-masterdata-service-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-auth-data-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-auth.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-auth.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-authorization-server-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-config-data-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-config.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-config.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-config-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-discovery-data-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-discovery.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-discovery.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-discovery-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-gateway-data-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-gateway.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-gateway.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-gateway-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-masterdata-data-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-masterdata.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-masterdata.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-masterdata-service-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-search-services-data-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-search-service.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-search-service.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-search-service-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-ui-qa1-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-ui-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-ui-qa1.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-consumer-qa1   ####recruiter4-ui-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-jobposting-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-jobposting.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-jobposting.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-jobposting-service-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-mjp-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-mjp.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-mjp.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-managejobposting-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-jobposting-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1-jobposting.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1-jobposting.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-jobposting-service-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-qa1-questionnaire-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      -  rec-qa1-questionnaire.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host:  rec-qa1-questionnaire.monster.com.ph
    http:
      paths:
      - path: /
        backend:
          serviceName: recruiter4-questionnaire-service-qa1
          servicePort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-other-qa1-rules-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1.monster.com.ph
    http:
      paths:
      - path: /sentinel
        backend:
          serviceName: recruiter4-sentinel-qa1
          servicePort: 80

---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  annotations:
#    kubernetes.io/ingress.class: "nginx-qarec"
#  name: nginx-new-qarec-01-qa1-consumer-ui-noida
#spec:
#  tls:
#    - hosts:
#      - rec-ui-qa1.monsterindia.noida
#      secretName: wildmonsterph2021
#  rules:
#  - host: rec-ui-qa1.monsterindia.noida
#    http:
#      paths:
#      - path: /
#        backend:
#          serviceName: recruiter4-consumer-qa1
#          servicePort: 80

---                 

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
    nginx.ingress.kubernetes.io/rewrite-target: "/recruiter-srp"
  name: nginx-new-qarec-01-qa1-recuiter-srp-ph
  namespace: qa-application
spec:
  tls:
    - hosts:
      - rec-qa1.monster.com.ph
      secretName: wildmonsterph2021
  rules:
  - host: rec-qa1.monster.com.ph
    http:
      paths:
      - path: /v4/recruiter
        backend:
          serviceName: recruiter4-recruitersrp-v4-qa1
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx-qarec"
  name: nginx-new-qarec-01-ph
spec:
  tls:
    - hosts:


  rules:
  - http:
      paths:
      - path: /web
        backend:
          serviceName: webapp1-svc
          servicePort: 80


      - path: /profile
        backend:
          serviceName: search-apis-qa1
          servicePort: 80
      - path: /actions
        backend:
          serviceName: search-apis-qa1
          servicePort: 80


      - path: /search
        backend:
          serviceName: search-apis-qa1
          servicePort: 80

      - path: /action
        backend:
          serviceName: search-apis-qa1
          servicePort: 80

      - path: /RecruiterAccount
        backend:
          serviceName: recruiter4-qa1
          servicePort: 80

      - path: /RecruiterAuth
        backend:
          serviceName: recruiter4-qa1
          servicePort: 80


      - path: /raven
        backend:
          serviceName: raven-seeker
          servicePort: 80

      - path: /srp
        backend:
          serviceName: search-srp-seeker
          servicePort: 3002
      - path: /seeker
        backend:
          serviceName: search-srp-seeker
          servicePort: 3002

      - path: /recruiter4commonservices
        backend:
          serviceName: recruiter4-commonservices-dev
          servicePort: 80


      - path: /pigeon
        backend:
          serviceName: pigeon-rec4-qa1
          servicePort: 80

      - path: /parrot
        backend:
          serviceName: parrot-rec4-qa1
          servicePort: 80

      - path: /penguin
        backend:
          serviceName: penguin-prod
          servicePort: 80

      - path: /penguinconsumer
        backend:
          serviceName: penguin-consumer-prod
          servicePort: 80

      - path: /v4/managejobposting
        backend:
          serviceName: recruiter4-managejobposting-ui-qa1
          servicePort: 80

